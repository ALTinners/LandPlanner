*, *:before, *:after
{
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

html, body
{
    width: 100%;
    height: 100%;

    margin: 0;
    padding: 0;
}

/*body
{
    background: #FFFFFF;

    color: #cccccc;
    font-size: 14px;
    /* Helvetica or Arial-based sans serif stack
    font-family: Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT", "Myriad Pro", Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue", Helvetica, Arial, sans-serif;

}*/

#render-target {
  width: 100%;
  height: 100%;
  background: #000000;
}

.mainContainer {
    width: inherit;
    height: inherit;

    display: flex;
    flex-direction: column;

    justify-content: flex-start; /* align items in Main Axis */
    align-items: stretch; /* align items in Cross Axis */
    align-content: stretch; /* Extra space in Cross Axis */

    background: rgba(50, 50, 55, 1.0);
}

.flexbox-item {
    padding: 0px;
}
.flexbox-item-grow {
    flex: 1; /* same as flex: 1 1 auto; */
}

.flexbox-item.content {
    background: rgba(0, 0, 0, .05);
}

.fill-area {
    display: flex;
    flex-direction: row;

    justify-content: flex-start; /* align items in Main Axis */
    align-items: stretch; /* align items in Cross Axis */
    align-content: stretch; /* Extra space in Cross Axis */

}

.fill-area-content {
    background: rgba(0, 0, 0, .3);
    border: 1px solid #000000;

    /* Needed for when the area gets squished too far and there is content that can't be displayed */
    overflow: auto;

}

.andrew-cont {
  display: flex;
  flex-flow: row;
}

.andrew-cont > .mainMenu {
    margin: 0px;
    padding: 10px;
    border: 5px solid #00;
    flex: 3 1 25%;
    order: 1;
    overflow-y: auto;
    overflow-x: auto;
}

.andrew-cont > #mapContainer {
    margin: 0px;
    padding: 10px;
    flex: 1 6 75%;
    order: 2;
}

#mapContainer {
  display: flex;
  flex-flow: column;
}

#myMap {
    background: #222222;
    flex: 1 1 auto;
    /*border: 2px solid rgba(50, 175, 175, .5);*/
}

/* Too narrow to support three columns */
@media all and (max-width: 640px) {
    .andrew-cont {
        flex-direction: column;
    }

    .andrew-cont > .mainMenu, .andrew-cont > #myMap, .andrew-cont > aside {
    /* Return them to document order */
        order: 0;
    }

    .andrew-cont > .mainMenu, .andrew-cont > #myMap, header, footer {
        min-height: 50px;
        max-height: 50px;
    }
}

.topMenuButton {
  display: flex;
  background: transparent;
  font-weight: bold;
  font-size: 1em;
  margin: 5px;
  margin-bottom: 0px;
  padding: 0px;
  flex: 1 1 100%;
}

.topMenuButton button {
  flex: 1 1 100%;
  font-weight: bold;
  font-size: 1em;
  padding:10px;
  justify-content: center;
  margin: 0px;

  background: rgba(50, 200, 150, 1.0);
  display: inline-flex;
  border: 1px solid rgba(100, 100, 100, 0.6);
}

.mainMap {
  width:350px;
  float:left;
  padding:5px;
}

ul {
  list-style: none;
  padding-left: 0px;
}

.categoryList,
.categoryList_selected {
  display: flex;
  flex-direction: column;
  padding: 6px;
  border: rgba(50, 200, 150, 0.8) solid 1px;
  background: rgba(255, 255, 255, 1.0);
}

.categoryList_selected {
  background: rgba(50, 200, 150, 1.0);
}

.catergoryList_header {
  background: transparent;
  display: inline-flex;
  flex-direction: row;
}

.catergoryList-checkbox-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.catergoryList_buttonHolder {
  margin-left: auto;
  float: right;
  display: table;
  background: transparent;
}

.catergoryList_buttonHolder button {
  font-weight: bold;
  background: rgba(255, 255, 255, 0.6);
  font-size: 1em;
  border: 1px solid rgba(100, 100, 100, 0.6);
  margin: 1px;
  margin-bottom: 0px;
  min-width: 10px;
  border-radius: 3pt;
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.colourCtrl {
  background: rgba(255, 255, 255, 0.6);
  display: inline-flex;
  margin: 1px;
  border: 1px solid rgba(100, 100, 100, 0.6);
  border-radius: 3pt;
}

.categoryList_nameCtrl,
.categoryList_nameCtrl_active {
  flex: 1;
  background: rgba(255, 255, 255, 0.6);
  font-family: Tahoma, Geneva, sans-serif;
  font-size: 1em;
  maxWidth: 200;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  border-radius: 3pt;
  margin: 1px;
  padding: 0;
  fontSize: 15;
  outline: 0;
  border: 1px solid rgba(100, 100, 100, 0.6);
}

.categoryList_nameCtrl_active {
  border: 2px solid rgba(100, 100, 100, 0.6);
  margin: 0px;
  background: rgba(255, 255, 255, 0.9);
}

.categoryList_dragHandle {
  cursor: move;
}

.featureList,
.featureList_selected {
  cursor: move;
  margin: 2px;
  text-align: center;
  font-family: Tahoma, Geneva, sans-serif;
  border: 1px solid rgba(100, 100, 100, 0.2);
  background: rgba(100, 250, 200, 0.5);
  margin: 1px;
}

.featureList_selected {
  border: 2px solid rgba(100, 100, 100, 0.5);
  margin: 0px;
  background: rgba(255, 255, 255, 0.4);
}

#mapTitle {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  text-align: center;
  background: rgba(255, 255, 255, .8);
}

#mapTitle .categoryList_nameCtrl, .categoryList_nameCtrl_active  {
  min-width: 200px;
  flex: 1;
  display: inline-flex;
}

#mapTitle span {
  flex: 1;
  display: inline-flex;
  flex-direction: column;
}

/* REACT TREEVIEW STYLING */
/* the tree node's style */
.tree-view {
  overflow-y: hidden;
}

.tree-view_item {
  /* immediate child of .tree-view, for styling convenience */
}

/* style for the children nodes container */
.tree-view_children {
  margin-left: 16px;
}

.tree-view_children-collapsed {
  height: 0px;
}

.tree-view_arrow {
  cursor: pointer;
  margin-right: 6px;
  display: inline-block;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.tree-view_arrow:after {
  content: 'â–¾';
}

/* rotate the triangle to close it */
.tree-view_arrow-collapsed {
  -webkit-transform: rotate(-90deg);
  -moz-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);
}
